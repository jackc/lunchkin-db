// Generated by CoffeeScript 1.6.3
(function() {
  var controller, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = {
    Collections: {},
    Models: {},
    Views: {}
  };

  App.Collections.Standings = (function(_super) {
    __extends(Standings, _super);

    function Standings() {
      _ref = Standings.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Standings.prototype.url = "api/v1/standings";

    Standings.prototype.sortAttribute = 'rating';

    Standings.prototype.sortDescending = true;

    Standings.prototype.comparator = function(left, right) {
      var greaterValue, lessValue;
      left = left.get(this.sortAttribute);
      right = right.get(this.sortAttribute);
      lessValue = this.sortDescending ? -1 : 1;
      greaterValue = -lessValue;
      if (left < right) {
        return lessValue;
      } else if (left > right) {
        return greaterValue;
      } else {
        return 0;
      }
    };

    return Standings;

  })(Backbone.Collection);

  App.Collections.Players = (function(_super) {
    __extends(Players, _super);

    function Players() {
      _ref1 = Players.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Players.prototype.url = 'api/v1/players';

    Players.prototype.comparator = 'name';

    return Players;

  })(Backbone.Collection);

  App.Views.PlayerStanding = (function(_super) {
    __extends(PlayerStanding, _super);

    function PlayerStanding() {
      _ref2 = PlayerStanding.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    PlayerStanding.prototype.tagName = 'tr';

    PlayerStanding.prototype.template = '#playerStandingsTemplate';

    return PlayerStanding;

  })(Marionette.ItemView);

  App.Views.Standings = (function(_super) {
    __extends(Standings, _super);

    function Standings() {
      _ref3 = Standings.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    Standings.prototype.tagName = 'table';

    Standings.prototype.className = 'standings';

    Standings.prototype.template = '#standingsTemplate';

    Standings.prototype.itemView = App.Views.PlayerStanding;

    Standings.prototype.events = {
      'click th': 'onHeaderClick'
    };

    Standings.prototype.collectionEvents = {
      'sort': 'render'
    };

    Standings.prototype.onHeaderClick = function(e) {
      var sortAttribute;
      sortAttribute = $(e.target).data("sort");
      if (this.collection.sortAttribute === sortAttribute) {
        this.collection.sortDescending = !this.collection.sortDescending;
      } else {
        this.collection.sortAttribute = sortAttribute;
        this.collection.sortDescending = true;
      }
      return this.collection.sort();
    };

    return Standings;

  })(Marionette.CompositeView);

  App.Views.Player = (function(_super) {
    __extends(Player, _super);

    function Player() {
      _ref4 = Player.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    Player.prototype.tagName = 'li';

    Player.prototype.template = '#playerTemplate';

    return Player;

  })(Marionette.ItemView);

  App.Views.Players = (function(_super) {
    __extends(Players, _super);

    function Players() {
      _ref5 = Players.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    Players.prototype.id = 'playersPage';

    Players.prototype.template = '#playersTemplate';

    Players.prototype.itemView = App.Views.Player;

    Players.prototype.appendHtml = function(collectionView, itemView) {
      return collectionView.$("li:last").before(itemView.el);
    };

    Players.prototype.events = {
      'submit form': 'addPlayer'
    };

    Players.prototype.addPlayer = function() {
      return this.collection.create({
        name: this.$('#player_name').val()
      });
    };

    return Players;

  })(Marionette.CompositeView);

  window.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref6 = Controller.__super__.constructor.apply(this, arguments);
      return _ref6;
    }

    Controller.prototype.standings = function() {
      var collection, standings;
      collection = new App.Collections.Standings;
      collection.fetch();
      standings = new App.Views.Standings({
        collection: collection
      });
      return Lunchkin.mainRegion.show(standings);
    };

    Controller.prototype.players = function() {
      var collection, players;
      collection = new App.Collections.Players;
      collection.fetch();
      players = new App.Views.Players({
        collection: collection
      });
      return Lunchkin.mainRegion.show(players);
    };

    Controller.prototype.games = function() {
      return console.log('games');
    };

    Controller.prototype.gamesNew = function() {
      return console.log('record a game');
    };

    return Controller;

  })(Marionette.Controller);

  controller = new Controller;

  window.Router = new Marionette.AppRouter({
    controller: controller,
    appRoutes: {
      "": "standings",
      "standings": "standings",
      "players": "players",
      "games": "games",
      "games/new": "gamesNew"
    }
  });

  window.Lunchkin = new Marionette.Application;

  Lunchkin.addInitializer(function() {
    return Lunchkin.addRegions({
      mainRegion: '#mainRegion'
    });
  });

  $(function() {
    Lunchkin.start();
    return Backbone.history.start();
  });

}).call(this);
